#!/usr/bin/env python3
# -*- coding: utf‚Äë8 -*-

"""
–°–∫—Ä–∏–ø—Ç:  visualise_cameras.py
–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pdfplumber, folium, pandas (–¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞).
–£—Å—Ç–∞–Ω–æ–≤–∫–∞:  pip install pdfplumber folium pandas
–ó–∞–ø—É—Å–∫:     python visualise_cameras.py document.pdf
"""

import sys
import re
from pathlib import Path
import pdfplumber
import pandas as pd
import folium


def extract_coords(pdf_path: Path) -> pd.DataFrame:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –ø–∞—Ä—ã —à–∏—Ä–æ—Ç–∞‚Äë–¥–æ–ª–≥–æ—Ç–∞ –∏–∑ PDF –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç DataFrame."""
    pattern = re.compile(r'(\d{2}(?:[ ,]\d{3,6})+)\s+(\d{2,3}(?:[ ,]\d{3,6})+)')
    coords = set()

    with pdfplumber.open(pdf_path) as pdf:
        for page in pdf.pages:
            text = page.extract_text()
            if not text:
                continue

            for raw_lat, raw_lon in pattern.findall(text):
                # –ø—Ä–∏–≤–æ–¥–∏–º ¬´41,555 616¬ª –∏–ª–∏ ¬´41 555616¬ª –∫ ¬´41.555616¬ª
                lat = float(raw_lat.replace(" ", "").replace(",", "."))
                lon = float(raw_lon.replace(" ", "").replace(",", "."))

                # —Ñ–∏–ª—å—Ç—Ä—É–µ–º¬†–ø–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º –¥–ª—è –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞–º
                if 38 <= lat <= 43 and 66 <= lon <= 74:
                    coords.add((round(lat, 6), round(lon, 6)))

    df = pd.DataFrame(coords, columns=["lat", "lon"]).sort_values(["lat", "lon"])
    return df


def make_map(df: pd.DataFrame, outfile: Path = Path("cameras_map.html")) -> None:
    """–°–æ–∑–¥–∞—ë—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–∞—Ä—Ç—É Folium —Å –º–∞—Ä–∫–µ—Ä–∞–º–∏ –∫–∞–º–µ—Ä."""
    center = [df["lat"].mean(), df["lon"].mean()]
    m = folium.Map(location=center, zoom_start=8, tiles="OpenStreetMap")

    for _, row in df.iterrows():
        folium.CircleMarker(
            location=[row["lat"], row["lon"]],
            radius=4,
            weight=1,
            fill=True,
            fill_opacity=0.8,
        ).add_to(m)

    m.save(outfile)
    print(f"üó∫  –ö–∞—Ä—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {outfile.absolute()}")


if __name__ == "__main__":
    if len(sys.argv) < 2:
        sys.exit("–£–∫–∞–∂–∏ –ø—É—Ç—å –∫ PDF:  python visualise_cameras.py document.pdf")

    pdf_path = Path(sys.argv[1])
    if not pdf_path.exists():
        sys.exit(f"–§–∞–π–ª {pdf_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")

    df_coords = extract_coords(pdf_path)
    print(f"–ù–∞–π–¥–µ–Ω–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: {len(df_coords)}")
    make_map(df_coords) 